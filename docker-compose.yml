version: "3.8"

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - POSTGRES_DB=${POSTGRES_DB:-bot}
      - POSTGRES_USER=${SERVICE_USER_POSTGRES}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - POSTGRES_HOST=bot-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "rilibot"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      bot-db:
        condition: service_healthy

  dashboard:
    build:
      context: web/
      dockerfile: Dockerfile
    environment:
      - SERVICE_DASHBOARD_FQDN=${SERVICE_DASHBOARD_FQDN}
      - NEXT_PUBLIC_DISCORD_CLIENT_ID=${NEXT_PUBLIC_DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - API_SECRET=${API_SECRET}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider http://localhost:3001",
          "||",
          "exit",
          "1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      bot-db:
        condition: service_healthy
    ports:
      - "3030:3000"

  bot-db:
    image: postgres:16-alpine
    volumes:
      - bot-postgresql-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${SERVICE_USER_POSTGRES}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - POSTGRES_DB=${POSTGRES_DB:-bot}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 20s
      retries: 10
